CREATE TYPE IF NOT EXISTS "MEMBERSHIP_TYPE" AS ENUM ('DONOR', 'MEMBER', 'VOLUNTEER', 'AUDITOR', 'ADMIN');
CREATE TYPE IF NOT EXISTS "MEDIA_TYPE" AS ENUM ('PICTURE', 'VIDEO');
CREATE TYPE IF NOT EXISTS "CONTACT_TYPE" AS ENUM ('EMAIL', 'PHONE', 'WHATSAPP');
CREATE TYPE IF NOT EXISTS "PROJECT_STATUS" AS ENUM ('PLANNING', 'IN_PROGRESS', 'COMPLETED', 'ON_HOLD', 'CANCELLED');
CREATE TYPE IF NOT EXISTS "EVENT_STATUS" AS ENUM ('UPCOMING', 'ONGOING', 'COMPLETED', 'CANCELLED');
CREATE TYPE IF NOT EXISTS "PAYMENT_METHOD" AS ENUM ('CREDIT_CARD', 'BANK_TRANSFER', 'MOBILE_MONEY', 'CASH');
CREATE TYPE IF NOT EXISTS "TRANSACTION_STATUS" AS ENUM ('PENDING', 'COMPLETED', 'FAILED', 'REFUNDED');
CREATE TYPE IF NOT EXISTS "ATTENDANCE_STATUS" AS ENUM ('INVITED', 'ACCEPTED', 'DECLINED', 'ATTENDED');
CREATE TYPE IF NOT EXISTS "GENDER" AS ENUM ('MALE', 'FEMALE', 'OTHER');

CREATE SCHEMA IF NOT EXISTS app;
CREATE SCHEMA IF NOT EXISTS core;
CREATE SCHEMA IF NOT EXISTS activities;
CREATE SCHEMA IF NOT EXISTS finance;
CREATE SCHEMA IF NOT EXISTS impact;
CREATE SCHEMA IF NOT EXISTS communications;

--------------------------------------------------
-- Schema: app
--------------------------------------------------

CREATE TABLE IF NOT EXISTS app."users" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "email" VARCHAR(255) UNIQUE NOT NULL,
    "password" TEXT,
    "username" TEXT UNIQUE,
    "google_id" TEXT UNIQUE,
    "apple_id" TEXT UNIQUE,
    "facebook_id" TEXT UNIQUE,
    "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS app."otps" (
    "id" SERIAL PRIMARY KEY,
    "email" VARCHAR(255) NOT NULL,
    "code" TEXT NOT NULL,
    "payload" JSONB,
    "expires_at" TIMESTAMP WITH TIME ZONE NOT NULL,
    "is_used" BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS app."notifications" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "user_id" UUID NOT NULL REFERENCES app."users"("id") ON DELETE CASCADE,
    "title" TEXT,
    "message" TEXT,
    "announcement_id" UUID, -- FK added in communications section
    "is_read" BOOLEAN NOT NULL DEFAULT FALSE,
    "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()
);

--------------------------------------------------
-- Schema: core
--------------------------------------------------

CREATE TABLE IF NOT EXISTS core."media" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "url" TEXT NOT NULL,
    "media_type" "MEDIA_TYPE" NOT NULL,
    "created_by" UUID, -- FK to constituents
    "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS core."constituents" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "user_id" UUID UNIQUE REFERENCES app."users"("id") ON DELETE SET NULL,
    "first_name" TEXT NOT NULL,
    "last_name" TEXT NOT NULL,
    "preferred_name" TEXT,
    "photo" UUID REFERENCES core."media"("id") ON DELETE SET NULL,
    "salutation" TEXT,
    "date_of_birth" DATE,
    "gender" "GENDER",
    "join_date" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()
);

-- Add missing FK from media to constituents
ALTER TABLE core."media" ADD FOREIGN KEY ("created_by") REFERENCES core."constituents"("id") ON DELETE SET NULL;

CREATE TABLE IF NOT EXISTS core."contact_informations" (
    "id" SERIAL PRIMARY KEY,
    "constituent_id" UUID NOT NULL REFERENCES core."constituents"("id") ON DELETE CASCADE,
    "contact_type" "CONTACT_TYPE" NOT NULL,
    "value" TEXT NOT NULL,
    "is_primary" BOOLEAN NOT NULL DEFAULT FALSE,
    UNIQUE ("constituent_id", "contact_type", "value")
);

CREATE TABLE IF NOT EXISTS core."memberships" (
    "id" SERIAL PRIMARY KEY,
    "constituent_id" UUID NOT NULL REFERENCES core."constituents"("id") ON DELETE CASCADE,
    "type" "MEMBERSHIP_TYPE" NOT NULL,
    "start_date" TIMESTAMP WITH TIME ZONE NOT NULL,
    "end_date" TIMESTAMP WITH TIME ZONE,
    "assigner_id" UUID REFERENCES core."constituents"("id") ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS core."chapters" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "name" TEXT NOT NULL,
    "country" TEXT NOT NULL,
    "description" TEXT,
    "founding_date" DATE NOT NULL,
    "is_active" BOOLEAN NOT NULL DEFAULT TRUE,
    "parent_id" UUID REFERENCES core."chapters"("id") ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS core."chapter_memberships" (
    "id" SERIAL PRIMARY KEY,
    "constituent_id" UUID NOT NULL REFERENCES core."constituents"("id") ON DELETE CASCADE,
    "chapter_id" UUID NOT NULL REFERENCES core."chapters"("id") ON DELETE CASCADE,
    "start_date" TIMESTAMP WITH TIME ZONE NOT NULL,
    "end_date" TIMESTAMP WITH TIME ZONE,
    "is_active" BOOLEAN NOT NULL DEFAULT TRUE,
    UNIQUE ("constituent_id", "chapter_id")
);

CREATE TABLE IF NOT EXISTS core."committees" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "name" TEXT UNIQUE NOT NULL,
    "description" TEXT
);

CREATE TABLE IF NOT EXISTS core."committee_memberships" (
    "id" SERIAL PRIMARY KEY,
    "constituent_id" UUID NOT NULL REFERENCES core."constituents"("id") ON DELETE CASCADE,
    "committee_id" UUID NOT NULL REFERENCES core."committees"("id") ON DELETE CASCADE,
    "start_date" TIMESTAMP WITH TIME ZONE NOT NULL,
    "end_date" TIMESTAMP WITH TIME ZONE,
    "is_active" BOOLEAN NOT NULL DEFAULT TRUE,
    UNIQUE ("constituent_id", "committee_id")
);

CREATE TABLE IF NOT EXISTS core."roles" (
    "id" SERIAL PRIMARY KEY,
    "name" TEXT UNIQUE NOT NULL,
    "description" TEXT
);

CREATE TABLE IF NOT EXISTS core."role_assignments" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "constituent_id" UUID NOT NULL REFERENCES core."constituents"("id") ON DELETE CASCADE,
    "role_id" INTEGER NOT NULL REFERENCES core."roles"("id") ON DELETE CASCADE,
    "chapter_id" UUID REFERENCES core."chapters"("id") ON DELETE CASCADE,
    "committee_id" UUID REFERENCES core."committees"("id") ON DELETE CASCADE,
    "started_at" TIMESTAMP WITH TIME ZONE NOT NULL,
    "ended_at" TIMESTAMP WITH TIME ZONE
);

--------------------------------------------------
-- Schema: activities
--------------------------------------------------

CREATE TABLE IF NOT EXISTS activities."projects" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "chapter_id" UUID REFERENCES core."chapters"("id") ON DELETE SET NULL,
    "project_name" TEXT NOT NULL,
    "project_objective" TEXT,
    "start_date" TIMESTAMP WITH TIME ZONE NOT NULL,
    "end_date" TIMESTAMP WITH TIME ZONE,
    "budget" DECIMAL(12, 2),
    "status" "PROJECT_STATUS" NOT NULL DEFAULT 'PLANNING'
);

CREATE TABLE IF NOT EXISTS activities."events" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "project_id" UUID REFERENCES activities."projects"("id") ON DELETE SET NULL,
    "event_name" TEXT NOT NULL,
    "event_date" TIMESTAMP WITH TIME ZONE NOT NULL,
    "event_location" TEXT,
    "event_objectives" TEXT,
    "status" "EVENT_STATUS" NOT NULL DEFAULT 'UPCOMING'
);

CREATE TABLE IF NOT EXISTS activities."event_participations" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(), -- Changed to UUID from SERIAL
    "constituent_id" UUID NOT NULL REFERENCES core."constituents"("id") ON DELETE CASCADE,
    "event_id" UUID NOT NULL REFERENCES activities."events"("id") ON DELETE CASCADE,
    "volunteer_hours" DECIMAL(5, 2),
    "role_during_event" TEXT,
    UNIQUE("constituent_id", "event_id")
);

--------------------------------------------------
-- Schema: finance
--------------------------------------------------

CREATE TABLE IF NOT EXISTS finance."financial_transactions" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "amount" DECIMAL(10, 2) NOT NULL,
    "currency" VARCHAR(3) NOT NULL,
    "transaction_date" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    "payment_method" "PAYMENT_METHOD" NOT NULL,
    "status" "TRANSACTION_STATUS" NOT NULL DEFAULT 'PENDING',
    "external_ref" TEXT
);

CREATE TABLE IF NOT EXISTS finance."designations" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "name" TEXT UNIQUE NOT NULL,
    "is_restricted" BOOLEAN NOT NULL DEFAULT FALSE,
    "description" TEXT
);

CREATE TABLE IF NOT EXISTS finance."donations" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "transaction_id" UUID UNIQUE NOT NULL REFERENCES finance."financial_transactions"("id") ON DELETE RESTRICT,
    "donor_id" UUID NOT NULL REFERENCES core."constituents"("id") ON DELETE RESTRICT,
    "project_id" UUID REFERENCES activities."projects"("id") ON DELETE SET NULL,
    "event_id" UUID REFERENCES activities."events"("id") ON DELETE SET NULL,
    "designation_id" UUID REFERENCES finance."designations"("id") ON DELETE SET NULL,
    "receipt_sent" BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS finance."dues" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "membership_type" "MEMBERSHIP_TYPE" NOT NULL,
    "chapter_id" UUID REFERENCES core."chapters"("id") ON DELETE SET NULL,
    "amount" DECIMAL(10, 2) NOT NULL,
    "currency" VARCHAR(3) NOT NULL,
    "period_start" DATE NOT NULL,
    "period_end" DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS finance."dues_payments" (
    "id" SERIAL PRIMARY KEY,
    "transaction_id" UUID UNIQUE NOT NULL REFERENCES finance."financial_transactions"("id") ON DELETE RESTRICT,
    "dues_id" UUID NOT NULL REFERENCES finance."dues"("id") ON DELETE RESTRICT,
    "constituent_id" UUID NOT NULL REFERENCES core."constituents"("id") ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS finance."vendors" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "name" TEXT UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS finance."expenditures" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "expenditure_date" TIMESTAMP WITH TIME ZONE NOT NULL,
    "amount" DECIMAL(12, 2) NOT NULL,
    "currency" VARCHAR(3) NOT NULL,
    "description" TEXT NOT NULL,
    "category" TEXT,
    "project_id" UUID REFERENCES activities."projects"("id") ON DELETE RESTRICT,
    "event_id" UUID REFERENCES activities."events"("id") ON DELETE SET NULL,
    "vendor_id" UUID REFERENCES finance."vendors"("id") ON DELETE SET NULL,
    "approved_by_id" UUID REFERENCES core."constituents"("id") ON DELETE RESTRICT
);

--------------------------------------------------
-- Schema: impact
--------------------------------------------------

CREATE TABLE IF NOT EXISTS impact."impact_areas" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "area_name" TEXT UNIQUE NOT NULL,
    "description" TEXT
);

CREATE TABLE IF NOT EXISTS impact."impact_reports" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "project_id" UUID NOT NULL REFERENCES activities."projects"("id") ON DELETE RESTRICT,
    "report_title" TEXT NOT NULL,
    "narrative" TEXT NOT NULL,
    "date_created" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    "created_by_id" UUID NOT NULL REFERENCES core."constituents"("id") ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS impact."outcomes" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "impact_area_id" UUID NOT NULL REFERENCES impact."impact_areas"("id") ON DELETE RESTRICT,
    "project_id" UUID NOT NULL REFERENCES activities."projects"("id") ON DELETE CASCADE,
    "outcome_name" TEXT NOT NULL,
    "target_value" DECIMAL(12, 2),
    "is_quantitative" BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS impact."metrics" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "outcome_id" UUID NOT NULL REFERENCES impact."outcomes"("id") ON DELETE CASCADE,
    "measurement_date" DATE NOT NULL,
    "value" DECIMAL(12, 2) NOT NULL,
    "notes" TEXT,
    "data_source" TEXT
);

--------------------------------------------------
-- Schema: communications
--------------------------------------------------

CREATE TABLE IF NOT EXISTS communications."announcements" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "title" TEXT NOT NULL,
    "content" TEXT NOT NULL,
    "created_by_id" UUID NOT NULL REFERENCES core."constituents"("id") ON DELETE RESTRICT,
    "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    "is_global" BOOLEAN NOT NULL DEFAULT FALSE
);

-- Alter Notifications to add the FK reference now that announcements exists
ALTER TABLE app."notifications" ADD FOREIGN KEY ("announcement_id") REFERENCES communications."announcements"("id") ON DELETE SET NULL;

CREATE TABLE IF NOT EXISTS communications."announcements_chapters" (
    "announcement_id" UUID NOT NULL REFERENCES communications."announcements"("id") ON DELETE CASCADE,
    "chapter_id" UUID NOT NULL REFERENCES core."chapters"("id") ON DELETE CASCADE,
    PRIMARY KEY ("announcement_id", "chapter_id")
);

CREATE TABLE IF NOT EXISTS communications."announcements_committees" (
    "announcement_id" UUID NOT NULL REFERENCES communications."announcements"("id") ON DELETE CASCADE,
    "committee_id" UUID NOT NULL REFERENCES core."committees"("id") ON DELETE CASCADE,
    PRIMARY KEY ("announcement_id", "committee_id")
);

CREATE TABLE IF NOT EXISTS communications."meetings" (
    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "title" TEXT NOT NULL,
    "agenda" TEXT,
    "start_time" TIMESTAMP WITH TIME ZONE NOT NULL,
    "end_time" TIMESTAMP WITH TIME ZONE NOT NULL,
    "location_url" TEXT,
    "chapter_id" UUID REFERENCES core."chapters"("id") ON DELETE CASCADE,
    "committee_id" UUID REFERENCES core."committees"("id") ON DELETE CASCADE,
    "created_by_id" UUID NOT NULL REFERENCES core."constituents"("id") ON DELETE RESTRICT,
    "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS communications."meeting_attendees" (
    "id" SERIAL PRIMARY KEY,
    "meeting_id" UUID NOT NULL REFERENCES communications."meetings"("id") ON DELETE CASCADE,
    "constituent_id" UUID NOT NULL REFERENCES core."constituents"("id") ON DELETE CASCADE,
    "status" "ATTENDANCE_STATUS" NOT NULL DEFAULT 'INVITED',
    "is_required" BOOLEAN NOT NULL DEFAULT TRUE,
    UNIQUE ("meeting_id", "constituent_id")
);